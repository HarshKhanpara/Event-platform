import { Schema, model, models } from "mongoose";

const UserSchema = new Schema({
  clerkId: { type: String, required: true, unique: true },
  email: { type: String, required: true, unique: true },
  username: { type: String, required: true, unique: true },
  firstName: { type: String, required: true },
  lastName: { type: String, required: true },
  photo: { type: String, required: true },
  backupCodeEnabled: { type: Boolean, default: false },
  banned: { type: Boolean, default: false },
  birthday: { type: String, default: "" },
  createOrganizationEnabled: { type: Boolean, default: true },
  createdAt: { type: Number },
  deleteSelfEnabled: { type: Boolean, default: true },
  externalAccounts: [
    {
      approvedScopes: String,
      emailAddress: String,
      familyName: String,
      givenName: String,
      googleId: String,
      id: String,
      label: String,
      object: { type: String, default: "google_account" },
      picture: String,
      publicMetadata: {},
      username: String,
      verification: {
        attempts: Number,
        error: {
          code: String,
          longMessage: String,
          message: String,
        },
        expireAt: Number,
        status: String,
        strategy: String,
      },
    },
  ],
  externalId: { type: String, default: null },
  gender: { type: String, default: "" },
  hasImage: { type: Boolean, default: true },
  id: { type: String },
  imageUrl: { type: String },
  lastActiveAt: { type: Number },
  lastSignInAt: { type: Number, default: null },
  locked: { type: Boolean, default: false },
  lockoutExpiresInSeconds: { type: Number, default: null },
  object: { type: String, default: "user" },
  passwordEnabled: { type: Boolean, default: false },
  phoneNumbers: [{ type: String }],
  primaryEmailAddressId: { type: String },
  primaryPhoneNumberId: { type: String, default: null },
  primaryWeb3WalletId: { type: String, default: null },
  privateMetadata: {},
  profileImageUrl: { type: String },
  publicMetadata: {},
  samlAccounts: [],
  totpEnabled: { type: Boolean, default: false },
  twoFactorEnabled: { type: Boolean, default: false },
  unsafeMetadata: {},
  updatedAt: { type: Number },
  verificationAttemptsRemaining: { type: Number, default: 100 },
  web3Wallets: [],
});

const User = models.User || model('User', UserSchema);

export default User;
